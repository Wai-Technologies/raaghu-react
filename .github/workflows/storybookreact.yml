name: Raaghu React Storybook Deployment
on:
  workflow_dispatch:
    inputs:
      environment:
          description: 'Select the deployment environment'
          required: true
          default: 'Staging'
          type: choice
          options:
          - Staging
          - Production
   
permissions:
  contents: none

jobs:
  build:
    # if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"

      # - name: npm install at raaghu-themes
      #   working-directory: raaghu-themes
      #   run: |
      #     npm install
      
      #- name: npm install raaghu-elements
      #  working-directory: raaghu-elements
      #  run: |
      #    npm install
          
      #- name: npm install at raaghu-components
      #  working-directory: raaghu-components
      #  run: |
      #    npm install
      
      #- name: npm install mfe 
      #  working-directory: raaghu-mfe
      #  run: |
      #    npm i --legacy-peer-deps

      - name: install and build storybook
        run: |
          npm run install-all
          npm run build-storybook
          # mkdir storybook-static/assets
          # cp .storybook/assets/* storybook-static/assets
          cp web.config storybook-static

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: ./storybook-static

  proddeploy:
    name: Production Deployment
    if: ${{ github.event.inputs.environment == 'Production' }}
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: Azure service principal login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Purge CDN
        run: 
          az cdn endpoint purge -n storybookreact --profile-name storybookreact-cdn-profile --content-paths "/*" --resource-group Raaghu-MFE-Demo-WebApp --no-wait

      - name: Azure service principal logout
        run: |
          az logout

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "storybookreact"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AAAB9223807941E1AE56FE4B2CC26C46 }}
          package: .
          
  stagedeploy:
    name: Staging Deployment
    if: ${{ github.event.inputs.environment == 'Staging' }}
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    environment:
      name: "Staging"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: Azure service principal login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Purge CDN
        run: 
          az cdn endpoint purge -n storybook-stage-react --profile-name storybook-stage-react-cdn-profile --content-paths "/*" --resource-group Raaghu-MFE-Demo-WebApp --no-wait

      - name: Azure service principal logout
        run: |
          az logout

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "storybook-stage-react"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_STORYBOOK_STAGE_REACT }}
          package: .
